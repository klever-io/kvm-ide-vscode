{
    "name": "vscode-kvm-ide",
    "displayName": "KleverChain IDE",
    "description": "KleverChain IDE for developing Smart Contracts",
    "version": "1.0.2",
    "publisher": "klever-org",
    "repository": {
        "type": "git",
        "url": "https://github.com/klever-io/kvm-ide-vscode.git"
    },
    "engines": {
        "vscode": "^1.76.2"
    },
    "categories": [
        "Programming Languages",
        "Extension Packs",
        "Debuggers",
        "Other"
    ],
    "icon": "content/logo.png",
    "activationEvents": [
        "workspaceContains:**/kleverchain.workspace.json"
    ],
    "main": "./dist/extension.js",
    "contributes": {
        "commands": [
            {
                "command": "kleverchain.setupWorkspace",
                "title": "Setup Workspace",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.installSdk",
                "title": "Install SDK",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.installKoperator",
                "title": "Install Koperator",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.installRustDebuggerPrettyPrinterScript",
                "title": "Install the rust debugger pretty printer script",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.refreshTemplates",
                "title": "Refresh",
                "category": "kleverchain",
                "icon": {
                    "light": "content/light/refresh.svg",
                    "dark": "content/dark/refresh.svg"
                }
            },
            {
                "command": "kleverchain.newFromTemplate",
                "title": "New Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.generateNewAccount",
                "title": "Generate New Account PEM file",
                "category": "kleverchain",
                "icon": {
                    "light": "content/light/pem.svg",
                    "dark": "content/dark/pem.svg"
                }
            },
            {
                "command": "kleverchain.getFaucet",
                "title": "Get Test KLV",
                "category": "kleverchain",
                "icon": {
                    "light": "content/light/money.svg",
                    "dark": "content/dark/money.svg"
                }
            },
            {
                "command": "kleverchain.refreshContracts",
                "title": "Refresh",
                "category": "kleverchain",
                "icon": {
                    "light": "content/light/refresh.svg",
                    "dark": "content/dark/refresh.svg"
                }
            },
            {
                "command": "kleverchain.buildContract",
                "title": "Build Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.deployContract",
                "title": "Deploy Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.invokeContract",
                "title": "Invoke Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.upgradeContract",
                "title": "Upgrade Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.cleanContract",
                "title": "Clean Contract",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.runScenarios",
                "title": "Run Scenarios",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.gotoContract",
                "title": "Show in Workspace Explorer",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.runFreshLocalnet",
                "title": "Start Fresh Localnet",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.resumeExistingLocalnet",
                "title": "Resume Localnet",
                "category": "kleverchain"
            },
            {
                "command": "kleverchain.stopLocalnet",
                "title": "Stop Localnet",
                "category": "kleverchain"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "kleverchain.buildContract",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.buildContract",
                    "when": "resourceFilename == kleverkapp.json",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.deployContract",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.deployContract",
                    "when": "resourceFilename == kleverkapp.json",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.invokeContract",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.invokeContract",
                    "when": "resourceFilename == kleverkapp.json",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.upgradeContract",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.upgradeContract",
                    "when": "resourceFilename == kleverkapp.json",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.cleanContract",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.cleanContract",
                    "when": "resourceFilename == kleverkapp.json",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.runScenarios",
                    "when": "resourceFilename =~ /.scen.json/",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.runScenarios",
                    "when": "explorerResourceIsFolder && resourceFilename != output && resourceFilename != debug && resourceFilename != target && resourceFilename != js-snippets && resourceFilename != interaction",
                    "group": "kleverchain"
                },
                {
                    "command": "kleverchain.runFreshLocalnet",
                    "when": "resourceFilename == localnet.toml",
                    "group": "kleverchain Localnet"
                },
                {
                    "command": "kleverchain.resumeExistingLocalnet",
                    "when": "resourceFilename == localnet.toml",
                    "group": "kleverchain Localnet"
                },
                {
                    "command": "kleverchain.stopLocalnet",
                    "when": "resourceFilename == localnet.toml",
                    "group": "kleverchain Localnet"
                }
            ],
            "commandPalette": [
                {
                    "command": "kleverchain.generateNewAccount",
                    "when": "false"
                },
                {
                    "command": "kleverchain.getFaucet",
                    "when": "false"
                },
                {
                    "command": "kleverchain.refreshContracts",
                    "when": "false"
                },
                {
                    "command": "kleverchain.refreshTemplates",
                    "when": "false"
                },
                {
                    "command": "kleverchain.newFromTemplate",
                    "when": "false"
                },
                {
                    "command": "kleverchain.buildContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.deployContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.invokeContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.upgradeContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.cleanContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.runScenarios",
                    "when": "false"
                },
                {
                    "command": "kleverchain.gotoContract",
                    "when": "false"
                },
                {
                    "command": "kleverchain.runFreshLocalnet",
                    "when": "false"
                },
                {
                    "command": "kleverchain.resumeExistingLocalnet",
                    "when": "false"
                },
                {
                    "command": "kleverchain.stopLocalnet",
                    "when": "false"
                }
            ],
            "editor/context": [],
            "view/title": [
                {
                    "command": "kleverchain.refreshTemplates",
                    "when": "view == kleverContractTemplates",
                    "group": "navigation"
                },
                {
                    "command": "kleverchain.refreshContracts",
                    "when": "view == kleverSmartContracts",
                    "group": "navigation"
                },
                {
                    "command": "kleverchain.generateNewAccount",
                    "when": "view == kleverSmartContracts",
                    "group": "navigation"
                },
                {
                    "command": "kleverchain.getFaucet",
                    "when": "view == kleverSmartContracts",
                    "group": "navigation"
                }
            ],
            "view/item/context": [
                {
                    "command": "kleverchain.buildContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.deployContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.invokeContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.upgradeContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.cleanContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.runScenarios",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.gotoContract",
                    "when": "view == kleverSmartContracts && viewItem == contract"
                },
                {
                    "command": "kleverchain.newFromTemplate",
                    "when": "view == kleverContractTemplates",
                    "group": "inline"
                }
            ]
        },
        "configuration": {
            "title": "vscode-kvm-ide",
            "properties": {
                "kleverchain.sdkPath": {
                    "type": "string",
                    "default": "~/klever-sdk"
                },
                "kleverchain.kleverNode": {
                    "type": "string",
                    "default": "https://node.testnet.klever.finance"
                },
                "kleverchain.keyFile": {
                    "type": "string",
                    "default": "~/klever-sdk/walletKey.pem"
                },
                "kleverchain.address": {
                    "type": "string",
                    "default": ""
                }
            }
        },
        "viewsContainers": {
            "activitybar": [
                {
                    "id": "kleverchain",
                    "title": "kleverchain",
                    "icon": "content/logo-monochrome.png"
                }
            ]
        },
        "views": {
            "kleverchain": [
                {
                    "id": "kleverSmartContracts",
                    "name": "Smart Contracts",
                    "contextualTitle": "Smart Contracts in Workspace"
                },
                {
                    "id": "kleverContractTemplates",
                    "name": "Templates",
                    "contextualTitle": "Smart Contract Templates"
                }
            ]
        },
        "viewsWelcome": [
            {
                "view": "kleverContractTemplates",
                "contents": "Hit the refresh button to fetch or update the available Smart Contract templates."
            },
            {
                "view": "kleverSmartContracts",
                "contents": "Hit the refresh button to update the list of Smart Contracts within your workspace."
            }
        ]
    },
    "scripts": {
        "vscode:package": "vsce package",
        "vscode:prepublish": "npm run package",
        "vscode:publish": "vsce publish",
        "webpack": "webpack --mode development",
        "webpack-dev": "webpack --mode development --watch",
        "package": "webpack --mode production --devtool hidden-source-map",
        "test-compile": "tsc -p ./",
        "test": "node ./out/test/runTest.js",
        "unit-tests": "mocha",
        "lint": "eslint src --ext ts"
    },
    "devDependencies": {
        "@types/chai": "4.2.11",
        "@types/eventsource": "1.1.11",
        "@types/glob": "7.1.3",
        "@types/mocha": "10.0.1",
        "@types/node": "18.15.10",
        "@types/uuid": "9.0.1",
        "@types/vscode": "1.76.0",
        "@typescript-eslint/eslint-plugin": "5.56.0",
        "@typescript-eslint/parser": "5.56.0",
        "@vscode/codicons": "0.0.32",
        "@vscode/webview-ui-toolkit": "1.2.2",
        "axios": "1.6.1",
        "chai": "4.3.10",
        "copy-webpack-plugin": "11.0.0",
        "eslint": "8.36.0",
        "eventsource": "2.0.2",
        "glob": "8.1.0",
        "html-loader": "4.2.0",
        "mocha": "10.2.0",
        "semver": "7.5.2",
        "ts-loader": "9.4.2",
        "ts-node": "10.9.1",
        "typescript": "4.9.5",
        "uuid": "8.3.2",
        "vsce": "2.15.0",
        "webpack": "5.76.3",
        "webpack-cli": "5.0.1"
    },
    "extensionDependencies": [],
    "dependencies": {
        "node-fetch": "^3.3.2"
    }
}
